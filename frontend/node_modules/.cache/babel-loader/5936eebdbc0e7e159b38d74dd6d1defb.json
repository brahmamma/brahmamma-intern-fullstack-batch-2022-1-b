{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brahm\\\\OneDrive\\\\Desktop\\\\Training\\\\ecommerce\\\\frontend\\\\src\\\\components\\\\Login\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport './Login.css';\nimport login_logo from '../../login_logo.jpg';\nimport React, { useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { loginuser } from '../../store/authenticSlice';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport YupPassword from 'yup-password';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nYupPassword(yup);\nexport const Login = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const validations = yup.object().shape({\n    password: yup.string().required('Password is required').max(30, 'limit exceded'),\n    email: yup.string().required('email required').email('Inavlid email format')\n  });\n  var formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: validations,\n    onSubmit: values => {\n      dispatch(loginuser(values));\n    }\n  });\n  var emailref = useRef();\n  var passwordref = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"global-container  main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card login-form car\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-title text-center\",\n            children: \"  Login  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: login_logo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-text\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: formik.handleSubmit,\n              className: \"form m-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email Id\",\n                className: \"form-control form-control-sm mt-3\",\n                autoComplete: \"new-password\",\n                ...formik.getFieldProps('email'),\n                required: true,\n                ref: emailref\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 29\n              }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"errors\",\n                children: formik.errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 72\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                placeholder: \"Password\",\n                className: \"form-control form-control-sm mt-3\",\n                ...formik.getFieldProps('password'),\n                ref: passwordref\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 29\n              }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"errors\",\n                children: formik.errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 86\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary btn-block\",\n                children: \" Login \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sign-up\",\n                children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/register\",\n                  children: \" Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 60\n                }, this), \" as a User\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"7HoQRFLQefBwkBNmWuki3c6sFOI=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["login_logo","React","useRef","useEffect","Link","loginuser","useFormik","yup","YupPassword","useDispatch","useSelector","Login","dispatch","validations","object","shape","password","string","required","max","email","formik","initialValues","validationSchema","onSubmit","values","emailref","passwordref","handleSubmit","getFieldProps","touched","errors"],"sources":["C:/Users/brahm/OneDrive/Desktop/Training/ecommerce/frontend/src/components/Login/Login.jsx"],"sourcesContent":["import './Login.css'\r\nimport login_logo from '../../login_logo.jpg'\r\nimport React,{useRef,useEffect}from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { loginuser } from '../../store/authenticSlice'\r\nimport { useFormik } from 'formik'\r\nimport * as yup from 'yup'\r\nimport YupPassword from 'yup-password'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nYupPassword(yup);\r\n\r\n\r\nexport const Login = () => {\r\n\r\n    const dispatch=useDispatch();\r\n    const validations=yup.object().shape({\r\n       \r\n        \r\n        password:yup.string().required('Password is required').max(30,'limit exceded'),\r\n        email:yup.string().required('email required').email('Inavlid email format')        \r\n\r\n    })\r\n\r\nvar formik=useFormik({\r\n    initialValues:{\r\n        email:'',\r\n        password:''\r\n    },\r\n    validationSchema:validations,\r\n    onSubmit:(values)=>{\r\n        dispatch(loginuser(values))\r\n        \r\n\r\n    }\r\n\r\n\r\n})\r\n\r\n    var emailref=useRef();\r\n    var passwordref=useRef();\r\n\r\n    \r\n\r\n\r\n   \r\n  return (\r\n     \r\n    <div className=\"pt-5\">  \r\n            <div className=\"global-container  main\">  \r\n                <div className=\"card login-form car\">  \r\n                    <div className=\"card-body\">  \r\n                        <h3 className=\"card-title text-center\">  Login  </h3>\r\n                        <img src={login_logo}/> \r\n                        <div className=\"card-text\">  \r\n                            <form onSubmit={formik.handleSubmit} className=\"form m-1\">  \r\n                                \r\n                            <input type=\"email\"  placeholder=\"Email Id\" className=\"form-control form-control-sm mt-3\" autoComplete='new-password'  {...formik.getFieldProps('email')} required ref={emailref}/>  \r\n                            {formik.touched.email&&formik.errors.email?<div className='errors'>{formik.errors.email}</div>:null}\r\n\r\n                            <input type=\"password\"    placeholder=\"Password\"  className=\"form-control form-control-sm mt-3\"  {...formik.getFieldProps('password')} ref={passwordref}/>  \r\n                                  \r\n                                    {formik.touched.password&&formik.errors.password?<div className='errors'>{formik.errors.password}</div>:null}      \r\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\"> Login </button>  \r\n                                \r\n                                <div className=\"sign-up\">  \r\n                                    Don't have an account? <Link to='/register'> Register</Link> as a User \r\n                                </div>  \r\n                            </form>  \r\n                        </div>  \r\n                    </div>  \r\n            </div>  \r\n    </div>\r\n</div>\r\n\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
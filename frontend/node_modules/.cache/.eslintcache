[{"C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\index.js":"1","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\App.js":"2","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\Register\\Register.jsx":"4","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\Login\\Login.jsx":"5","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\store\\index.js":"6","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\store\\driverSlice.js":"7","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\store\\adminSlice.js":"8","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\store\\authenticSlice.js":"9","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\store\\userSlice.js":"10","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\User\\User.jsx":"11","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\Admin\\Admin.jsx":"12","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\Admin\\Dashboarda.jsx":"13","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\Driver\\Driver.jsx":"14","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\Admin\\Sidebara.jsx":"15","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\Admin\\Navbara.jsx":"16","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\User\\Navbaru.jsx":"17","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\User\\Sidebaru.jsx":"18","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\User\\Dashboardu.jsx":"19","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\Driver\\Sidebard.jsx":"20","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\Driver\\Navbard.jsx":"21","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\Driver\\Dashboardd.jsx":"22"},{"size":649,"mtime":1654430295140,"results":"23","hashOfConfig":"24"},{"size":1130,"mtime":1654583998669,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1654340305960,"results":"26","hashOfConfig":"24"},{"size":5751,"mtime":1654445435318,"results":"27","hashOfConfig":"24"},{"size":2780,"mtime":1654485672397,"results":"28","hashOfConfig":"24"},{"size":416,"mtime":1654429956447,"results":"29","hashOfConfig":"24"},{"size":486,"mtime":1654430169574,"results":"30","hashOfConfig":"24"},{"size":6457,"mtime":1654631340957,"results":"31","hashOfConfig":"24"},{"size":3659,"mtime":1654616184219,"results":"32","hashOfConfig":"24"},{"size":5704,"mtime":1654691624234,"results":"33","hashOfConfig":"24"},{"size":466,"mtime":1654589612543,"results":"34","hashOfConfig":"24"},{"size":468,"mtime":1654589627197,"results":"35","hashOfConfig":"24"},{"size":28520,"mtime":1654666873420,"results":"36","hashOfConfig":"24"},{"size":470,"mtime":1654589643636,"results":"37","hashOfConfig":"24"},{"size":1315,"mtime":1654666908939,"results":"38","hashOfConfig":"24"},{"size":1209,"mtime":1654652926315,"results":"39","hashOfConfig":"24"},{"size":1213,"mtime":1654652972307,"results":"40","hashOfConfig":"24"},{"size":1072,"mtime":1654655102398,"results":"41","hashOfConfig":"24"},{"size":12541,"mtime":1654699345878,"results":"42","hashOfConfig":"24"},{"size":944,"mtime":1654653754696,"results":"43","hashOfConfig":"24"},{"size":1209,"mtime":1654652963395,"results":"44","hashOfConfig":"24"},{"size":4240,"mtime":1654587260225,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"11u4ghu",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"49"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"49"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"49"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"49"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"49"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"49"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"49"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"49"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"49"},"C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\index.js",[],[],[],"C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\App.js",["125","126","127","128","129"],[],"import { BrowserRouter, Link, Route, Routes,Redirect } from 'react-router-dom';\nimport './App.css';\nimport { Login } from './components/Login/Login';\nimport Register from './components/Register/Register'\nimport {Admin} from './components/Admin/Admin'\nimport {User}from './components/User/User'\nimport {Driver} from  './components/Driver/Driver'\nimport {useSelector} from 'react-redux'\nimport { useEffect } from 'react';\nfunction App() {\n    \n  const loggeduser=useSelector(state=>state.authentic.loggeduser);\n  const token=useSelector(state=>state.authentic.tokenlog);\n  return (\n    <div className=\"App\">\n     <BrowserRouter>\n\n     <Routes>\n        \n        <Route path=\"/admin/home\" element={<Admin/>} />\n        <Route path=\"/driver/home\" element={<Driver/>}/>\n        <Route path='/user/home' element={<User/>}/>\n        \n        <Route path='/register' element={<Register/>}/>\n        <Route exact path='' element={<Login/>}/>\n        <Route exact path='/login' element={<Login/>}/>\n        <Route exact path='/' element={<Login/>}/>\n        \n     </Routes>\n     \n     </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\Register\\Register.jsx",["130","131"],[],"import './Register.css'\r\nimport React,{useRef,useEffect}from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport {useFormik} from 'formik'\r\nimport { getData,registeruser } from '../../store/authenticSlice';\r\nimport * as yup from 'yup'\r\nimport YupPassword from 'yup-password'\r\n\r\nYupPassword(yup);\r\n\r\n\r\n\r\nexport default function Register(){\r\n    const dispatch=useDispatch();\r\n    const emails=[]\r\n    const users = useSelector((state) => state.authentic.users);\r\n    users.map((user)=>{\r\n        emails.push(user.email)\r\n    })\r\n    var uref=useRef();\r\n    var eref=useRef();\r\n    var pnref=useRef();\r\n    var pref=useRef();\r\n    var cpref=useRef();\r\n    useEffect(()=>{\r\n        dispatch(getData())\r\n        \r\n    },[])\r\n    \r\n    \r\n    const validations=yup.object().shape({\r\n        username:yup.string().required('Username is required').min(3,'too short..').max(35,'too long...'),\r\n        phonenumber:yup.string().required('phone number rrequired').min(10,'Not valid phone number').max(10,'Not valid phone number').matches(/^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/,'Not a valid phonne number'),\r\n        password:yup.string().required('Password is required').min(8,'password must contain 8 or more characters with at least one of each: uppercase, lowercase, number and special').max(30,'Maximum 30 charracters are allowed')\r\n                    .minLowercase(1,'password must contain at least 1 lower case letter').minUppercase(1,'password must contain at least 1 upper case letter').minNumbers(1, 'password must contain at least 1 number')\r\n                    .minSymbols(1, 'password must contain at least 1 special character'),\r\n        confirmpassword:yup.string().required(' confirm Password is required').oneOf([yup.ref('password'),null],'password and confirm passwords should match..'),\r\n        email:yup.string().required('email is required').email('Inavlid email format').notOneOf(emails,'Email already Taken!')     \r\n\r\n    })\r\n\r\n    const formik=useFormik({\r\n        initialValues:{\r\n            username:'',\r\n            email:'',\r\n            phonenumber:'',\r\n            password:'',\r\n            confirmpassword:''\r\n\r\n        },\r\n        validationSchema:validations,\r\n        \r\n        onSubmit:(values)=>{\r\n           \r\n            const newuser={\r\n                name:values.username,\r\n                email:values.email,\r\n                phonenumber:values.phonenumber,\r\n                password:values.password,\r\n                role_id:3\r\n            }\r\n            dispatch(registeruser(newuser))\r\n           \r\n        }\r\n        \r\n    })\r\n    \r\n    \r\n  return (\r\n     \r\n    <div className=\"pt-5\">  \r\n            <div className=\"global-container  main\">  \r\n                <div className=\"card login-form car\">  \r\n                    <div className=\"card-body\">  \r\n                        <h3 className=\"card-title text-center\">  Register  </h3>  \r\n                        <div className=\"card-text\">  \r\n                            <form onSubmit={formik.handleSubmit} className=\"form m-1\" >  \r\n                                  \r\n                                    \r\n                                    <input type=\"text\"  placeholder=\"Username\"className=\"form-control form-control-sm mt-3\" autoComplete='new-password' {...formik.getFieldProps('username')} required ref={uref}/>  \r\n                                \r\n                                    {formik.touched.username&&formik.errors.username?<div className='errors'>{formik.errors.username}</div>:null}\r\n                                     \r\n                                    <input type=\"email\"  placeholder=\"Email Id\" className=\"form-control form-control-sm mt-3\" autoComplete='new-password'  {...formik.getFieldProps('email')} required ref={eref}/>  \r\n                                    {formik.touched.email&&formik.errors.email?<div className='errors'>{formik.errors.email}</div>:null}\r\n                                    \r\n                                     \r\n                                    <input type=\"number\"   placeholder=\"phone Numer\" className=\"form-control form-control-sm mt-3\" autoComplete='new-password'  {...formik.getFieldProps('phonenumber')} required ref={pnref}/>  \r\n                                    {formik.touched.phonenumber&&formik.errors.phonenumber?<div className='errors'>{formik.errors.phonenumber}</div>:null}\r\n                                    <input type=\"password\"    placeholder=\"Password\"  className=\"form-control form-control-sm mt-3\"  {...formik.getFieldProps('password')} ref={pref}/>  \r\n                                  \r\n                                    {formik.touched.password&&formik.errors.password?<div className='errors'>{formik.errors.password}</div>:null}\r\n                                    <input type=\"password\"   placeholder=\"Confirm  Password\" className=\"form-control form-control-sm mt-3\"  {...formik.getFieldProps('confirmpassword')} required ref={cpref} />  \r\n                                    {formik.touched.confirmpassword&&formik.errors.confirmpassword?<div className='errors'>{formik.errors.confirmpassword}</div>:null}\r\n                                  \r\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\"> Register </button>  \r\n                                \r\n                                <div className=\"sign-up\">  \r\n                                    Already have an account? <Link to='/'>Login</Link>  \r\n                                </div>  \r\n                            </form>  \r\n                        </div>  \r\n                    </div>  \r\n            </div>  \r\n    </div>\r\n</div>\r\n\r\n  )\r\n}\r\n","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\Login\\Login.jsx",["132","133","134"],[],"import './Login.css'\r\nimport log_logo from '../../log_logo.png'\r\nimport React,{useRef,useEffect}from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { loginuser } from '../../store/authenticSlice'\r\nimport { useFormik } from 'formik'\r\nimport * as yup from 'yup'\r\nimport YupPassword from 'yup-password'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nYupPassword(yup);\r\n\r\n\r\nexport const Login = () => {\r\n\r\n    const dispatch=useDispatch();\r\n    const validations=yup.object().shape({\r\n       \r\n        \r\n        password:yup.string().required('Password is required').max(30,'limit exceded'),\r\n        email:yup.string().required('email required').email('Inavlid email format')        \r\n\r\n    })\r\n\r\nvar formik=useFormik({\r\n    initialValues:{\r\n        email:'',\r\n        password:''\r\n    },\r\n    validationSchema:validations,\r\n    onSubmit:(values)=>{\r\n        dispatch(loginuser(values))\r\n        \r\n\r\n    }\r\n\r\n\r\n})\r\n\r\n    var emailref=useRef();\r\n    var passwordref=useRef();\r\n\r\n    \r\n\r\n\r\n   \r\n  return (\r\n     \r\n    <div className=\"pt-5\">  \r\n            <div className=\"global-container  main\">  \r\n                <div className=\"card login-form car\">  \r\n                    <div className=\"card-body\">  \r\n                        <h3 className=\"card-title text-center\">  Login  </h3>\r\n                        <img src={log_logo} className='logo-image'/> \r\n                        <div className=\"card-text\">  \r\n                            <form onSubmit={formik.handleSubmit} className=\"form m-1\">  \r\n                                \r\n                            <input type=\"email\"  placeholder=\"Email Id\" className=\"form-control form-control-sm mt-3\" autoComplete='new-password'  {...formik.getFieldProps('email')} required ref={emailref}/>  \r\n                            {formik.touched.email&&formik.errors.email?<div className='errors'>{formik.errors.email}</div>:null}\r\n\r\n                            <input type=\"password\"    placeholder=\"Password\"  className=\"form-control form-control-sm mt-3\"  {...formik.getFieldProps('password')} ref={passwordref}/>  \r\n                                  \r\n                                    {formik.touched.password&&formik.errors.password?<div className='errors'>{formik.errors.password}</div>:null}      \r\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\"> Login </button>  \r\n                                \r\n                                <div className=\"sign-up\">  \r\n                                    Don't have an account? <Link to='/register'> Register</Link> as a User \r\n                                </div>  \r\n                            </form>  \r\n                        </div>  \r\n                    </div>  \r\n            </div>  \r\n    </div>\r\n</div>\r\n\r\n  )\r\n}\r\n","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\store\\index.js",[],[],"C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\store\\driverSlice.js",[],[],"C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\store\\adminSlice.js",["135"],[],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const adminSlice= createSlice({\r\n  name: 'admin',\r\n  initialState: {\r\n    allproducts:[],\r\n    allusers:[],\r\n    alldrivers:[],\r\n    allcategories:[]\r\n  },\r\n  reducers: {\r\n    loadallusers: (state,action) => {\r\n      state.allusers=[]\r\n      state.allusers.push(action.payload);\r\n      \r\n      \r\n    },\r\n    loadallproducts: (state,action) => {\r\n      state.allproducts=[]\r\n      state.allproducts.push(action.payload);\r\n    },\r\n    loadalldrivers: (state,action) => {\r\n      state.alldrivers=[]\r\n      state.alldrivers.push(action.payload);\r\n    },\r\n    loadallcategories: (state,action) => {\r\n      state.allcategories=[]\r\n      state.allcategories.push(action.payload);\r\n    },\r\n  },\r\n});\r\nexport function getallusers(){\r\n  const token=localStorage.getItem('token')\r\n  const user=localStorage.getItem('user')\r\n  return(dispatch)=>{\r\n  \r\n    fetch('http://localhost:8000/admin/allusers',{\r\n      method:'GET',\r\n      headers:{\r\n        'Content-Type':'application/json',\r\n        'token':token,\r\n        'user':user\r\n      }\r\n    })\r\n    .then((res)=>res.json())\r\n    .then((data)=>dispatch(loadallusers(data)))\r\n    .catch((err)=>console.log(err))\r\n\r\n  }\r\n\r\n}\r\nexport function getalldrivers(){\r\n  const token=localStorage.getItem('token')\r\n  const user=localStorage.getItem('user')\r\n  return(dispatch)=>{\r\n  \r\n    fetch('http://localhost:8000/admin/alldrivers',{\r\n      method:'GET',\r\n      headers:{\r\n        'Content-Type':'application/json',\r\n        'token':token,\r\n        'user':user\r\n      }\r\n    })\r\n    .then((res)=>res.json())\r\n    .then((data)=>dispatch(loadalldrivers(data)))\r\n    .catch((err)=>console.log(err))\r\n\r\n  }\r\n\r\n\r\n}\r\nexport function getallcategories(){\r\n  const token=localStorage.getItem('token')\r\n  const user=localStorage.getItem('user')\r\n  return(dispatch)=>{\r\n  \r\n    fetch('http://localhost:8000/admin/allcategories',{\r\n      method:'GET',\r\n      headers:{\r\n        'Content-Type':'application/json',\r\n        'token':token,\r\n        'user':user\r\n      }\r\n    })\r\n    .then((res)=>res.json())\r\n    .then((data)=>dispatch(loadallcategories(data)))\r\n    .catch((err)=>console.log(err))\r\n\r\n  }\r\n\r\n\r\n}\r\nexport function getallproducts(){\r\n  const token=localStorage.getItem('token')\r\n  const user=localStorage.getItem('user')\r\n  return(dispatch)=>{\r\n  \r\n    fetch('http://localhost:8000/admin/allproducts',{\r\n      method:'GET',\r\n      headers:{\r\n        'Content-Type':'application/json',\r\n        'token':token,\r\n        'user':user\r\n      }\r\n    })\r\n    .then((res)=>res.json())\r\n    .then((data)=>dispatch(loadallproducts(data)))\r\n    .catch((err)=>console.log(err))\r\n\r\n  }\r\n\r\n\r\n}\r\nexport function addcategory(category){\r\n  return(dispatch)=>{\r\n    const token=localStorage.getItem('token')\r\n    const user=localStorage.getItem('user')\r\n    fetch('http://localhost:8000/admin/addcategory',{\r\n      method:'POST',\r\n      headers:{\r\n        'Content-Type':'application/json',\r\n        'token':token,\r\n        'user':user\r\n      },\r\n      body:JSON.stringify(category)\r\n    })\r\n    .then((res)=>res.json())\r\n    .then((data)=>dispatch(loadallcategories(data)))\r\n    .catch((err)=>console.log(err))\r\n\r\n  }\r\n}\r\nexport function adddriver(driver){\r\n  return(dispatch)=>{\r\n    const token=localStorage.getItem('token')\r\n    const user=localStorage.getItem('user')\r\n    \r\n    fetch('http://localhost:8000/admin/adddriver',{\r\n      method:'POST',\r\n      headers:{\r\n        'Content-Type':'application/json',\r\n        'token':token,\r\n        'user':user\r\n      },\r\n      body:JSON.stringify(driver)\r\n    })\r\n    .then((res)=>res.json())\r\n    .then((data)=>dispatch(loadalldrivers(data)))\r\n    .catch((err)=>console.log(err))\r\n\r\n  }\r\n}\r\nexport function addproduct(product){\r\n  return(dispatch)=>{\r\n    const token=localStorage.getItem('token')\r\n    const user=localStorage.getItem('user')\r\n    \r\n    fetch('http://localhost:8000/admin/addproduct',{\r\n      method:'POST',\r\n      headers:{\r\n        'Content-Type':'application/json',\r\n        'token':token,\r\n        'user':user\r\n      },\r\n      body:JSON.stringify(product)\r\n    })\r\n    .then((res)=>res.json())\r\n    .then((data)=>dispatch(loadallproducts(data)))\r\n    .catch((err)=>console.log(err))\r\n}\r\n}\r\nexport function updatingproduct(pro){\r\n  return(dispatch)=>{\r\n    const token=localStorage.getItem('token')\r\n    const user=localStorage.getItem('user')\r\n    \r\n    fetch(`http://localhost:8000/admin/updateproduct/${pro.id}`,{\r\n      method:'PUT',\r\n      headers:{\r\n        'Content-Type':'application/json',\r\n        'token':token,\r\n        'user':user\r\n      },\r\n      body:JSON.stringify(pro)\r\n    })\r\n    .then((res)=>res.json())\r\n    .then((data)=>dispatch(loadallproducts(data)))\r\n    .catch((err)=>console.log(err))\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n}\r\nexport function deletion(pro){\r\n  return(dispatch)=>{\r\n    const token=localStorage.getItem('token')\r\n    const user=localStorage.getItem('user')\r\n    \r\n    fetch(`http://localhost:8000/admin/deleteproduct/${pro.id}`,{\r\n      method:'DELETE',\r\n      headers:{\r\n        'Content-Type':'application/json',\r\n        'token':token,\r\n        'user':user\r\n      }\r\n    })\r\n    .then((res)=>res.json())\r\n    .then((data)=>dispatch(getallproducts()))\r\n    .catch((err)=>console.log(err))\r\n}\r\n\r\n}\r\nexport function makeitavailable(pro){\r\n  return(dispatch)=>{\r\n    const token=localStorage.getItem('token')\r\n    const user=localStorage.getItem('user')\r\n    \r\n    fetch(`http://localhost:8000/admin/enableproduct/${pro.id}`,{\r\n      method:'PUT',\r\n      headers:{\r\n        'Content-Type':'application/json',\r\n        'token':token,\r\n        'user':user\r\n      }\r\n    })\r\n    .then((res)=>res.json())\r\n    .then((data)=>dispatch(getallproducts()))\r\n    .catch((err)=>console.log(err))\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n}\r\nexport function makeitunavailable(pro){\r\n  return(dispatch)=>{\r\n    const token=localStorage.getItem('token')\r\n    const user=localStorage.getItem('user')\r\n    \r\n    fetch(`http://localhost:8000/admin/disableproduct/${pro.id}`,{\r\n      method:'PUT',\r\n      headers:{\r\n        'Content-Type':'application/json',\r\n        'token':token,\r\n        'user':user\r\n      }\r\n    })\r\n    .then((res)=>res.json())\r\n    .then((data)=>dispatch(getallproducts()))\r\n    .catch((err)=>console.log(err))\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\nexport const { loadallcategories,loadalldrivers,loadallproducts,loadallusers } = adminSlice.actions;\r\nexport default adminSlice.reducer;\r\n","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\store\\authenticSlice.js",["136","137"],[],"import { createSlice } from '@reduxjs/toolkit';\r\nexport const authenticSlice= createSlice({\r\n  name: 'authentication',\r\n  initialState: {\r\n    users:[],\r\n    tokenlog:null,\r\n    loggeduser:{}\r\n  },\r\n  reducers: {\r\n    loadusers: (state,action) => {\r\n      state.users=[]\r\n      state.users.push(action.payload);\r\n    },\r\n    loadtoken: (state,action) => {\r\n      state.tokenlog=action.payload;\r\n    },\r\n    loggeduser:(state,action)=>{\r\n      state.loggeduser=action.payload;\r\n      \r\n      \r\n    },\r\n    logout:(state,action)=>{\r\n      state.loggeduser='';\r\n      state.tokenlog=null\r\n\r\n    }\r\n  },\r\n});\r\nexport function getData(){\r\n  return((dispatch)=>{\r\n\r\n    fetch('http://localhost:8000/allusers')\r\n    .then((res)=>res.json())\r\n    .then((data)=>dispatch(loadusers(data)))\r\n\r\n  })\r\n}\r\nexport function loginuser(loguser){\r\n  return(dispatch)=>{\r\n    fetch('http://localhost:8000/loginauthentication',{\r\n      method:'POST',\r\n      headers:{\r\n        'Content-Type':'application/json'\r\n      },\r\n      body:JSON.stringify(loguser)\r\n    })\r\n    .then((res)=>{\r\n      if(res.status===200){\r\n        res.json().then((data)=>{\r\n          if(data.user.role_id===1){\r\n            alert(\"Login Successful as admin\")\r\n            dispatch(loadtoken(data.token))\r\n            dispatch(loggeduser(data.user))\r\n            localStorage.setItem('token',data.token)\r\n            localStorage.setItem('user',JSON.stringify(data.user))\r\n            window.location.href='/admin/home'\r\n            \r\n          }\r\n          if(data.user.role_id===2){\r\n            alert(\"Login Successful as driverr\")\r\n            dispatch(loadtoken(data.token))\r\n            dispatch(loggeduser(data.user))\r\n            localStorage.setItem('token',data.token)\r\n            localStorage.setItem('user',JSON.stringify(data.user))\r\n            window.location.href='/driver/home'\r\n           \r\n          }\r\n          if(data.user.role_id===3){\r\n            alert(\"Login Successful as user\")\r\n            dispatch(loadtoken(data.token))\r\n            dispatch(loggeduser(data.user))\r\n            localStorage.setItem('token',data.token)\r\n            localStorage.setItem('user',JSON.stringify(data.user))\r\n            window.location.href='/user/home'\r\n          }\r\n      })\r\n    }\r\n      if(res.status===405){\r\n        alert('password did not match')\r\n        \r\n        }\r\n        if(res.status===410){\r\n          alert('user not found')\r\n          window.location.reload()\r\n          }\r\n        if(res.status===500){\r\n          alert('Internal server error')\r\n          \r\n        }\r\n      \r\n      \r\n    })\r\n    \r\n  }\r\n}\r\n\r\n\r\n\r\nexport function registeruser(newuser){\r\n  return(dispatch)=>{\r\n    fetch('http://localhost:8000/userregister',{\r\n                method:'POST',\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                },\r\n                body:JSON.stringify(newuser)\r\n            }).then((res)=>{\r\n              if(res.status===200){\r\n                dispatch(getData())\r\n                alert(\"Registerd succesfully login now..\")\r\n                window.location.href='/login'\r\n              }\r\n              if(res.status===400){{\r\n                alert(\"User existed\")\r\n                window.location.reload()\r\n              }}\r\n              if(res.status===500){\r\n                alert(\"Internal server error\")\r\n                window.location.reload()\r\n              }\r\n            })\r\n            \r\n            \r\n}}\r\nexport function loggingout(){\r\n  return(dispatch)=>{{\r\n    dispatch(logout)\r\n  }}\r\n}\r\n\r\n\r\nexport const { loadusers,loadtoken ,loggeduser,logout} = authenticSlice.actions;\r\nexport default authenticSlice.reducer;\r\n","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\store\\userSlice.js",[],[],"C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\User\\User.jsx",[],[],"C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\Admin\\Admin.jsx",[],[],"C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\Admin\\Dashboarda.jsx",["138","139","140","141","142","143","144","145","146"],[],"\r\nimport React,{useEffect,useState,useRef} from 'react';\r\nimport {Container ,Card,Row, Col, Button} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux'; \r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport student1 from '../../student1.png'\r\n import { getalldrivers,getallusers,getallproducts,getallcategories,addcategory,adddriver,addproduct,makeitavailable,makeitunavailable,updatingproduct,deletion} from '../../store/adminSlice';\r\n import { getData,registeruser } from '../../store/authenticSlice'\r\nfunction Dashboard(){\r\n    const [usersearch,setusersearch]=useState('')\r\n    const [catfilter,setcatfilter]=useState(null)\r\n    const [productsearch,setproductsearch]=useState('')\r\n    const [driversearch,setdriversearch]=useState('')\r\n    const [editpro,seteditpro]=useState({})\r\n   const dispatch=useDispatch();\r\n   const allproducts=useSelector((state)=>state.admin.allproducts[0])\r\n   const allusers=useSelector((state)=>state.admin.allusers[0])\r\n   const allcategories=useSelector((state)=>state.admin.allcategories[0])\r\n   const alldrivers=useSelector((state)=>state.admin.alldrivers[0])\r\n   const emails=[]\r\n    const users = useSelector((state) => state.authentic.users);\r\n    users.map((user)=>{\r\n        emails.push(user.email)\r\n    })\r\n\r\nuseEffect(()=>{\r\n    dispatch(getallproducts());\r\n    dispatch(getallusers());\r\n    dispatch(getallcategories());\r\n    dispatch(getalldrivers());\r\n    dispatch(getData())\r\n},[dispatch])\r\n\r\n    var [s,sets]=React.useState(0)\r\n   function handleallproducts(){\r\n       sets(0)\r\n   }\r\n   \r\n   \r\n    function handleaddproduct(){\r\n       \r\n        sets(1)\r\n        \r\n        \r\n    }\r\n    function handleallcategories(){\r\n        \r\n        sets(2)\r\n        \r\n        \r\n    }\r\n    function handleaddcategory(){\r\n        \r\n        sets(3)\r\n        \r\n    }\r\n    function handlealldrivers(){\r\n        \r\n        sets(4)\r\n        \r\n    }\r\n    function handleadddriver(){\r\n        \r\n        sets(5)\r\n        \r\n    }\r\n    function handleallorders(){\r\n        \r\n        sets(6)\r\n        \r\n    }\r\n    function handleallusers(){\r\n        \r\n        sets(7)\r\n        \r\n    }\r\n    function handleedit(pro){\r\n        seteditpro(pro)\r\n        sets(8)\r\n    }\r\n    function handleupdate(){\r\n        dispatch(updatingproduct(editpro))\r\n    }\r\n    function handledelete(pro){\r\n        dispatch(deletion(pro))\r\n    }\r\n    function handleavailability(pro){\r\n        if(pro.available_status===true){\r\n            dispatch(makeitunavailable(pro))\r\n        }\r\n        else{\r\n            dispatch(makeitavailable(pro))\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const addproductvalidations=yup.object().shape({\r\n        name:yup.string().required('please eneter the name').min(3,'too short..').max(35,'too long...'),\r\n        price:yup.string().required('please ente the price').min(1,'Not valid phone number').max(15,'Not valid phone number'),\r\n        image:yup.string().required('image is equired'),\r\n        category_id:yup.string().required('please select the category'),\r\n        description:yup.string().required('Please provide description')\r\n         \r\n\r\n    })\r\n    const addproductformik=useFormik({\r\n        initialValues:{\r\n            name:'',\r\n            category_id:'',\r\n            price:'',\r\n            image:'',\r\n            description:''\r\n            \r\n\r\n        },\r\n        validationSchema:addproductvalidations,\r\n        \r\n        onSubmit:(values)=>{\r\n           \r\n            const newproduct={\r\n                name:values.name,\r\n                image:values.image,\r\n                price:values.price,\r\n                category_id:parseInt(values.category_id),\r\n                description:values.description,\r\n                available_status:true\r\n            }\r\n            console.log(newproduct)\r\n            dispatch(addproduct(newproduct))\r\n            window.location.reload()\r\n        }\r\n        \r\n    })\r\n    \r\n    const addcategoryvalidations=yup.object().shape({\r\n        category:yup.string().required('please eneter the categoryname').min(3,'too short..').max(35,'too long...'),\r\n        \r\n         \r\n\r\n    })\r\n\r\n    \r\n    const addcategoryformik=useFormik({\r\n        initialValues:{\r\n           \r\n            category:'',\r\n            \r\n            \r\n\r\n        },\r\n        validationSchema:addcategoryvalidations,\r\n        \r\n        onSubmit:(values)=>{\r\n            dispatch(addcategory(values))\r\n            window.location.reload()\r\n            \r\n        }\r\n        \r\n    })\r\n    const validations=yup.object().shape({\r\n        username:yup.string().required('Username is required').min(3,'too short..').max(35,'too long...'),\r\n        phonenumber:yup.string().required('phone number rrequired').min(10,'Not valid phone number').max(10,'Not valid phone number').matches(/^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/,'Not a valid phonne number'),\r\n        password:yup.string().required('Password is required').min(8,'password must contain 8 or more characters with at least one of each: uppercase, lowercase, number and special').max(30,'Maximum 30 charracters are allowed')\r\n                    .minLowercase(1,'password must contain at least 1 lower case letter').minUppercase(1,'password must contain at least 1 upper case letter').minNumbers(1, 'password must contain at least 1 number')\r\n                    .minSymbols(1, 'password must contain at least 1 special character'),\r\n        confirmpassword:yup.string().required(' confirm Password is required').oneOf([yup.ref('password'),null],'password and confirm passwords should match..'),\r\n        email:yup.string().required('email is required').email('Inavlid email format').notOneOf(emails,'Email already Taken!')     \r\n\r\n    })\r\n\r\n    const adddriverformik=useFormik({\r\n        initialValues:{\r\n            username:'',\r\n            email:'',\r\n            phonenumber:'',\r\n            password:'',\r\n            confirmpassword:''\r\n\r\n        },\r\n        validationSchema:validations,\r\n        \r\n        onSubmit:(values)=>{\r\n           \r\n            const newdriver={\r\n                name:values.username,\r\n                email:values.email,\r\n                phonenumber:values.phonenumber,\r\n                password:values.password,\r\n                role_id:2\r\n            }\r\n            console.log(newdriver)\r\n            dispatch(adddriver(newdriver))\r\n           window.location.reload();\r\n        }\r\n        \r\n    })\r\n \r\n    return (\r\n    <div className=\"col main pt-5 mt-3\">\r\n         \r\n        <div className=\"row mb-3\">\r\n        <div className=\"col-xl-3 col-sm-6 py-2\" onClick={handleallproducts}>\r\n                <div className=\"card bg-success text-white h-100\">\r\n                    <div className=\"card-body bg-primary\" style={{backgroundColor:\"#57b960\"}}>\r\n                        \r\n                        <h6 className=\"text-uppercase\">All products</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-sm-6 py-2\" onClick={handleaddproduct}>\r\n                <div className=\"card bg-success text-white h-100\">\r\n                    <div className=\"card-body bg-success\" style={{backgroundColor:\"#57b960\"}}>\r\n                        \r\n                        <h6 classname=\"text-uppercase\">ADD PRODUCT</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-sm-6 py-2\" onClick={handleallcategories}>\r\n                <div className=\"card text-white bg-danger h-100\">\r\n                    <div className=\"card-body bg-danger\">\r\n                        \r\n                        <h6 className=\"text-uppercase\" >ALL CATEGORIES</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-sm-6 py-2\" onClick={handleaddcategory}>\r\n                <div className=\"card text-white bg-info h-100\">\r\n                    <div className=\"card-body bg-info\">\r\n                        \r\n                        <h6 className=\"text-uppercase\">ADD CATEGORY</h6>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-sm-6 py-2\" onClick={handlealldrivers}>\r\n                <div className=\"card text-white bg-warning h-100\">\r\n                    <div className=\"card-body\">\r\n                        \r\n                        <h6 className=\"text-uppercase\">ALL DRIVERS</h6>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-sm-6 py-2\" onClick={handleadddriver}>\r\n                <div className=\"card text-white bg-info h-100\">\r\n                    <div className=\"card-body bg-info\">\r\n                        \r\n                        <h6 className=\"text-uppercase\">ADD DRIVER</h6>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-sm-6 py-2\" onClick={handleallorders}>\r\n                <div className=\"card text-white bg-secondy h-100\">\r\n                    <div className=\"card-body bg-secondary\">\r\n                        \r\n                        <h6 className=\"text-uppercase\"> ALL ORDERS</h6>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-sm-6 py-2\" onClick={handleallusers}>\r\n                <div className=\"card text-white bg-success h-100\">\r\n                    <div className=\"card-body bg-success\">\r\n                        \r\n                        <h6 className=\"text-uppercase\">ALL USERS</h6>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div className={(s===0 && s!==1 && s!==2 && s!==3 && s!==4 && s!==5 &&s!==6 && s!==7)?'dis':'hide'}>\r\n            <input type=\"text\" value={productsearch} placeholder=\"search...\" onChange={(e)=>setproductsearch(e.target.value)}/>\r\n            <Container className='p-4'>  \r\n                <Row>  \r\n                \r\n            { allproducts&& allproducts.filter(product=>product.name.toLowerCase().includes(productsearch.toLocaleLowerCase())).map((product,ui) => (  \r\n            <Card\r\n                \r\n                key={ui}  \r\n                 \r\n                style={{width:\"23%\"}}  \r\n                className=\"m-2 car\"  \r\n            >  \r\n                <Card.Header><b><center>{product.name}</center></b></Card.Header>  \r\n                <Card.Body>\r\n                <center>\r\n                <Card.Text>\r\n                <img src={student1} className=\"productimage\"/>\r\n                <b>{product.price}</b>\r\n                <br/>\r\n                <b>{product.description}</b>\r\n                <br/>\r\n                <Button className='buttonstyle' onClick={()=>{handleedit(product)}}>EDIT</Button>\r\n                <Button onClick={()=>handledelete(product)}>DELETE</Button>\r\n                <br/>\r\n                <Button onClick={()=>{handleavailability(product)}}  className={product.available_status?\"available\":\"unavailable\"}>{product.available_status?\"Make it Unavailable\":\"Make it Available\"}</Button>\r\n                </Card.Text> \r\n                </center>   \r\n                </Card.Body>  \r\n            </Card>  \r\n            ))}  \r\n            </Row>  \r\n            </Container>  \r\n    </div>\r\n    <div id=\"div1\" className={(s===1 && s!==0 && s!==2 && s!==3 && s!==4 && s!==5 &&s!==6 && s!==7)?'dis':'hide'}>\r\n                <div className=\"pt-5\">  \r\n                        <div className=\"global-container  main\">  \r\n                            <div className=\"card login-form\">  \r\n                                <div className=\"card-body\">  \r\n                                        <h3 className=\"card-title text-center\"> <b>Add Product</b>  </h3>  \r\n                                        <div className=\"card-text\">  \r\n                                            <form onSubmit={addproductformik.handleSubmit} className=\"form m-1\" >  \r\n                                                \r\n                                                    \r\n                                                    <input type=\"text\"  placeholder=\"Name\"className=\"form-control form-control-sm mt-3\" autoComplete='new-password' {...addproductformik.getFieldProps('name')} required />  \r\n                                                \r\n                                                    {addproductformik.touched.name&&addproductformik.errors.name?<div className='errors'>{addproductformik.errors.name}</div>:null}\r\n                                                    \r\n                                                    <input type=\"text\"  placeholder=\"Image\" className=\"form-control form-control-sm mt-3\" autoComplete='new-password'  {...addproductformik.getFieldProps('image')} required />  \r\n                                                    {addproductformik.touched.image&&addproductformik.errors.image?<div className='errors'>{addproductformik.errors.image}</div>:null}\r\n                                                    \r\n                                                    \r\n                                                    <input type=\"number\"   placeholder=\"Price in Rs:\" className=\"form-control form-control-sm mt-3\" autoComplete='new-password'  {...addproductformik.getFieldProps('price')} required />  \r\n                                                    {addproductformik.touched.price&&addproductformik.errors.price?<div className='errors'>{addproductformik.errors.price}</div>:null}\r\n\r\n                                                    <select className=\"form-control form-control-sm mt-3\" {...addproductformik.getFieldProps('category_id')}>\r\n                                                    <option className=\"form-control form-control-sm mt-3\">Select Category</option>\r\n                                                        {allcategories&&allcategories.map((cat)=>{\r\n                                                            return(\r\n                                                            <option className=\"form-control form-control-sm mt-3\" value={cat.id}>{cat.category}</option>\r\n                                                            )\r\n                                                        })}\r\n                                                        \r\n                                                    </select>\r\n                                                    <textarea className='form-control form-control-sm mt-3' placeholder=\"Description\" autoComplete='new-password' {...addproductformik.getFieldProps('description')}></textarea>\r\n                                                    {addproductformik.touched.description&&addproductformik.errors.description?<div className='errors'>{addproductformik.errors.description}</div>:null}\r\n                                                <button type=\"submit\" className=\"btn btn-primary btn-block\"> ADD</button>  \r\n                                                \r\n                                            </form>  \r\n                                        </div>  \r\n                                    </div>  \r\n                            </div>  \r\n                    </div>\r\n                </div> \r\n        \r\n        </div>\r\n    <div className={(s===2 && s!==1 && s!==0 && s!==3 && s!==4 && s!==5 &&s!==6 && s!==7)?'dis':'hide'}>\r\n            \r\n            <Container className='p-4'>  \r\n                <Row> \r\n                <select className='form-control form-control-sm mt-3 selectstyle' onChange={(e)=>{setcatfilter(parseInt(e.target.value))}}>\r\n                    <option className='form-control form-control-sm mt-3'>Select category</option>\r\n                    {allcategories&&allcategories.map((cat)=>{\r\n                        return(\r\n                            <option className='form-control form-control-sm mt-3' value={cat.id}>{cat.category}</option>\r\n                        )\r\n                    })}\r\n                </select> \r\n                \r\n            { allproducts&& allproducts.filter(pro=>pro.category_id==catfilter).map((product,ui) => (  \r\n            <Card\r\n                \r\n                key={ui}  \r\n                 \r\n                style={{width:\"23%\"}}  \r\n                className=\"m-2 car\"  \r\n            >  \r\n                <Card.Header><b><center>{product.name}</center></b></Card.Header>  \r\n                <Card.Body>\r\n                <center>\r\n                <Card.Text>\r\n                <img src={student1} className=\"productimage\"/>\r\n                <b>{product.price}</b>\r\n                <br/>\r\n                <b>{product.description}</b>\r\n                <br/>\r\n                <Button className='buttonstyle' onClick={()=>{handleedit(product)}}>EDIT</Button>\r\n                <Button onClick={()=>handledelete(product)}>DELETE</Button>\r\n                <br/>\r\n                <Button onClick={()=>{handleavailability(product)}}  className={product.available_status?\"available\":\"unavailable\"}>{product.available_status?\"Make it Unavailable\":\"Make it Available\"}</Button>\r\n                </Card.Text> \r\n                </center>   \r\n                </Card.Body>  \r\n            </Card>  \r\n            ))}  \r\n            </Row>  \r\n            </Container>  \r\n    </div>\r\n        <div id=\"div3\" className={(s===3 && s!==0 && s!==1 && s!==2 && s!==4 && s!==5 &&s!==6 && s!==7)?'dis':'hide'} >\r\n                <div className=\"pt-5\">  \r\n                        <div className=\"global-container  main\">  \r\n                            <div className=\"card login-form\">  \r\n                                <div className=\"card-body\">  \r\n                                        <h3 className=\"card-title text-center\"> <b>Add Category</b>  </h3>  \r\n                                        <div className=\"card-text\">  \r\n                                            <form onSubmit={addcategoryformik.handleSubmit} className=\"form m-1\" >  \r\n                                                \r\n                                                    \r\n                                                    <input type=\"text\"  placeholder=\"Plese enter category name\"className=\"form-control form-control-sm mt-3\" autoComplete='new-password' {...addcategoryformik.getFieldProps('category')} required />  \r\n                                                    {addcategoryformik.touched.category&&addcategoryformik.errors.category?<div className='errors'>{addcategoryformik.errors.category}</div>:null}\r\n                                                    \r\n                                                <button type=\"submit\" className=\"btn btn-primary btn-block\"> ADD</button>  \r\n                                                \r\n                                            </form>  \r\n                                        </div>  \r\n                                    </div>  \r\n                            </div>  \r\n                    </div>\r\n                </div> \r\n        \r\n        </div>\r\n        <div className={(s===4 && s!==1 && s!==2 && s!==3 && s!==0 && s!==5 &&s!==6 && s!==7)?'dis':'hide'}>\r\n        <input type=\"text\"  value={driversearch} onChange={(e)=>setdriversearch(e.target.value)} placeholder=\"search....\"/>\r\n            <Container className='p-4'>  \r\n                <Row>  \r\n                \r\n            { alldrivers&& alldrivers.filter(driver=>driver.name.toLowerCase().includes(driversearch.toLowerCase())).map((driver,ui) => (  \r\n            <Card\r\n                \r\n                key={ui}  \r\n                 \r\n                style={{width:\"23%\"}}  \r\n                className=\"m-2 car\"  \r\n            >  \r\n                <Card.Header><b><center>DriverID:{driver.id}</center></b></Card.Header>  \r\n                <Card.Body>\r\n                <center>\r\n                <Card.Title><b><center>{driver.name}</center></b></Card.Title>  \r\n                <Card.Text>\r\n                <img src={student1} className=\"imagestyle\"/>\r\n                <br/>\r\n                Email:  <b>{driver.email}</b>\r\n                <br/>\r\n               PhoneNumber: <b>{driver.phonenumber}</b>\r\n                \r\n                </Card.Text> \r\n                </center>   \r\n                </Card.Body>  \r\n            </Card>  \r\n            ))}  \r\n            </Row>  \r\n            </Container>  \r\n    </div>\r\n        <div id=\"div5\" className={(s===5 && s!==0 && s!==1 && s!==2 && s!==4 && s!==3 &&s!==6 && s!==7)?'dis':'hide'} >\r\n                <div className=\"pt-5\">  \r\n                        <div className=\"global-container  main\">  \r\n                            <div className=\"card login-form\">  \r\n                                <div className=\"card-body\">  \r\n                                        <h3 className=\"card-title text-center\"> <b>Add Driver</b>  </h3>  \r\n                                        <div className=\"card-text\">  \r\n                                            <form onSubmit={adddriverformik.handleSubmit} className=\"form m-1\" >  \r\n                                                \r\n                                                    \r\n                                            <input type=\"text\"  placeholder=\"Username\"className=\"form-control form-control-sm mt-3\" autoComplete='new-password' {...adddriverformik.getFieldProps('username')} required />  \r\n                                \r\n                                {adddriverformik.touched.username&&adddriverformik.errors.username?<div className='errors'>{adddriverformik.errors.username}</div>:null}\r\n                                 \r\n                                <input type=\"email\"  placeholder=\"Email Id\" className=\"form-control form-control-sm mt-3\" autoComplete='new-password'  {...adddriverformik.getFieldProps('email')} required />  \r\n                                {adddriverformik.touched.email&&adddriverformik.errors.email?<div className='errors'>{adddriverformik.errors.email}</div>:null}\r\n                                \r\n                                 \r\n                                <input type=\"number\"   placeholder=\"phone Numer\" className=\"form-control form-control-sm mt-3\" autoComplete='new-password'  {...adddriverformik.getFieldProps('phonenumber')} required />  \r\n                                {adddriverformik.touched.phonenumber&&adddriverformik.errors.phonenumber?<div className='errors'>{adddriverformik.errors.phonenumber}</div>:null}\r\n                                <input type=\"password\"    placeholder=\"Password\"  className=\"form-control form-control-sm mt-3\"  {...adddriverformik.getFieldProps('password')} />  \r\n                              \r\n                                {adddriverformik.touched.password&&adddriverformik.errors.password?<div className='errors'>{adddriverformik.errors.password}</div>:null}\r\n                                <input type=\"password\"   placeholder=\"Confirm  Password\" className=\"form-control form-control-sm mt-3\"  {...adddriverformik.getFieldProps('confirmpassword')} required  />  \r\n                                {adddriverformik.touched.confirmpassword&&adddriverformik.errors.confirmpassword?<div className='errors'>{adddriverformik.errors.confirmpassword}</div>:null}\r\n                              \r\n                            <button type=\"submit\" className=\"btn btn-primary btn-block\"> ADD </button> \r\n                                                \r\n                                            </form>  \r\n                                        </div>  \r\n                                    </div>  \r\n                            </div>  \r\n                    </div>\r\n                </div> \r\n        \r\n        </div>\r\n        <div className={(s===7 && s!==1 && s!==2 && s!==3 && s!==0 && s!==5 &&s!==6 && s!==4)?'dis':'hide'}>\r\n            <input type=\"text\"  value={usersearch} onChange={(e)=>setusersearch(e.target.value)} placeholder=\"search....\"/>\r\n            <Container className='p-4'>  \r\n                <Row>  \r\n                \r\n            { allusers&& allusers.filter(user=>user.name.toLowerCase().includes(usersearch.toLowerCase())).map((user,ui) => (  \r\n            <Card\r\n                \r\n                key={ui}  \r\n                 \r\n                style={{width:\"23%\"}}  \r\n                className=\"m-2 car\"  \r\n            >  \r\n                <Card.Header><b><center>UserID:{user.id}</center></b></Card.Header>  \r\n                <Card.Body>\r\n                <center>\r\n                <Card.Title><b><center>{user.name}</center></b></Card.Title>  \r\n                <Card.Text>\r\n                <img src={student1} className=\"imagestyle\"/>\r\n                <br/>\r\n                Email:  <b>{user.email}</b>\r\n                <br/>\r\n               PhoneNumber: <b>{user.phonenumber}</b>\r\n                \r\n                </Card.Text> \r\n                </center>   \r\n                </Card.Body>  \r\n            </Card>  \r\n            ))}  \r\n            </Row>  \r\n            </Container>  \r\n    </div>\r\n    <div id=\"div8\" className={(s===8 && s!==0 && s!==2 && s!==3 && s!==4 && s!==5 &&s!==6 && s!==7 &&s!==1)?'dis':'hide'}>\r\n                <div className=\"pt-5\">  \r\n                        <div className=\"global-container  main\">  \r\n                            <div className=\"card login-form\">  \r\n                                <div className=\"card-body\">  \r\n                                        <h3 className=\"card-title text-center\"> <b>Edit Product</b>  </h3>  \r\n                                        <div className=\"card-text\">  \r\n                                            <form className=\"form m-1\" >  \r\n                                                \r\n                                                    \r\n                                                    <input type=\"text\" name=\"name\" value={editpro.name} placeholder=\"Name\"className=\"form-control form-control-sm mt-3\" autoComplete='new-password'  required  onChange={(e)=>seteditpro({...editpro,name:e.target.value})}/>  \r\n                                                \r\n                                                    \r\n                                                    \r\n                                                    <input type=\"text\" name=\"\" value={editpro.image} placeholder=\"Image\" className=\"form-control form-control-sm mt-3\" autoComplete='new-password' onChange={(e)=>seteditpro({...editpro,image:e.target.value})}  required />  \r\n                                                    \r\n                                                    \r\n                                                    \r\n                                                    <input type=\"number\" value={editpro.price}  placeholder=\"Price in Rs:\" className=\"form-control form-control-sm mt-3\" autoComplete='new-password'   required  onChange={(e)=>seteditpro({...editpro,price:e.target.value})}/>  \r\n                                                    \r\n\r\n                                                    <select className=\"form-control form-control-sm mt-3\" onChange={(e)=>seteditpro({...editpro,category:parseInt(e.target.value)})}>\r\n                                                        {allcategories&&allcategories.map((cat)=>{\r\n                                                            return(\r\n                                                            <option className=\"form-control form-control-sm mt-3\" value={cat.id}>{cat.category}</option>\r\n                                                            )\r\n                                                        })}\r\n                                                        \r\n                                                    </select>\r\n                                                    <textarea className='form-control form-control-sm mt-3'value={editpro.description} placeholder=\"Description\" autoComplete='new-password' onChange={(e)=>seteditpro({...editpro,description:e.target.value})} ></textarea>\r\n                                                    \r\n                                                <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={handleupdate}> UPDATE</button>  \r\n                                                \r\n                                            </form>  \r\n                                        </div>  \r\n                                    </div>  \r\n                            </div>  \r\n                    </div>\r\n                </div> \r\n        \r\n        </div>\r\n        \r\n    </div>\r\n    )\r\n}\r\n \r\nexport default Dashboard","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\Driver\\Driver.jsx",[],[],"C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\Admin\\Sidebara.jsx",["147","148","149","150","151"],[],"import React from 'react'\r\nimport admin from '../../admin.png'\r\nimport { useDispatch,useSelector} from 'react-redux';\r\nimport { loggeduser, loggingout } from '../../store/authenticSlice';\r\nfunction Sidebar(){\r\n    const dispatch=useDispatch()\r\n    const loggeduser=useSelector(state=>state.authentic.loggeduser);\r\n    function handlelogout(){\r\n        \r\n        window.localStorage.removeItem('token');\r\n        window.localStorage.removeItem('user');\r\n        dispatch(loggingout())\r\n        window.location.href='/'\r\n    }\r\n    return (\r\n         <div className=\"col-md-3 col-lg-2 sidebar-offcanvas pl-0 side\" id=\"sidebar\" role=\"navigation\" style={{backgroundColor:\"#e9ecef\"}}>\r\n            <ul className=\"nav flex-column sticky-top pl-0 pt-5 p-3 mt-3 \">\r\n                <center>\r\n                <li className=\"nav-item mb-2 mt-3\"><a className=\"nav-link text-secondary\" href=\"#\"><h5><b>ADMIN</b></h5></a></li>\r\n                <li><img src={admin} className=\"imagestyle\"/></li>\r\n                <li className=\"nav-item mb-2 mt-3\"><a class=\"nav-link text-secondary\" href=\"#\"><h5><b></b></h5></a></li>\r\n                <li className=\"nav-item mb-2 \"><span onClick={handlelogout}>Logout</span></li>\r\n                </center>\r\n                \r\n            </ul>\r\n       </div>\r\n    )\r\n}\r\n \r\nexport default Sidebar","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\Admin\\Navbara.jsx",["152"],[],"import React from 'react'\r\n \r\nexport const Navbar = () => {\r\n    function handlehome(){\r\n        window.location.reload()\r\n    }\r\n    return (\r\n            <nav class=\"navbar fixed-top navbar-expand-md navbar-dark bg-dark mb-3\">\r\n                <div class=\"flex-row d-flex\">\r\n                    <button type=\"button\" class=\"navbar-toggler mr-2 \" data-toggle=\"offcanvas\" title=\"Toggle responsive left sidebar\">\r\n                        <span class=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                </div>\r\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsingNavbar\">\r\n                    <span class=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div class=\"navbar-collapse collapse\" id=\"collapsingNavbar\">\r\n                    <ul class=\"navbar-nav\">\r\n                        <li class=\"nav-item active\">\r\n                            <a class=\"nav-link\" onClick={handlehome}>Home <span class=\"sr-only\">Home</span></a>\r\n                        </li>\r\n                        \r\n                    </ul>\r\n                    \r\n                </div>\r\n       </nav>\r\n    )\r\n}\r\nexport default Navbar","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\User\\Navbaru.jsx",["153"],[],"import React from 'react'\r\n \r\nexport const Navbar = () => {\r\n\r\n\r\n    function handlehome(){\r\n        window.location.reload()\r\n    }\r\n    return (\r\n            <nav class=\"navbar fixed-top navbar-expand-md navbar-dark bg-dark mb-3\">\r\n                <div class=\"flex-row d-flex\">\r\n                    <button type=\"button\" class=\"navbar-toggler mr-2 \" data-toggle=\"offcanvas\" title=\"Toggle responsive left sidebar\">\r\n                        <span class=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                </div>\r\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsingNavbar\">\r\n                    <span class=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div class=\"navbar-collapse collapse\" id=\"collapsingNavbar\">\r\n                    <ul class=\"navbar-nav\">\r\n                        <li class=\"nav-item active\">\r\n                            <a class=\"nav-link\" onClick={handlehome}>Home <span class=\"sr-only\">Home</span></a>\r\n                        </li>\r\n                        \r\n                    </ul>\r\n                    \r\n                </div>\r\n       </nav>\r\n    )\r\n}\r\nexport default Navbar","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\User\\Sidebaru.jsx",["154","155","156"],[],"import React from 'react'\r\nimport student1 from '../../student1.png'\r\nimport { useSelector } from 'react-redux';\r\nconst Sidebar = () => {\r\n    const loggeduser=useSelector(state=>state.authentic.loggeduser);\r\n    function handlelogout(){\r\n        window.localStorage.removeItem('token');\r\n        window.localStorage.removeItem('user');\r\n        window.location.href='/'\r\n    }\r\n    return (\r\n         <div className=\"col-md-3 col-lg-2 sidebar-offcanvas pl-0 side\" id=\"sidebar\" role=\"navigation\" style={{backgroundColor:\"#e9ecef\"}}>\r\n            <ul className=\"nav flex-column sticky-top pl-0 pt-5 p-3 mt-3 \">\r\n                <center>\r\n                <li className=\"nav-item mb-2 mt-3\"><a class=\"nav-link text-secondary\" href=\"#\"><h5><b>User Dashboard</b></h5></a></li>\r\n                <li><img src={student1} className=\"imagestyle\"/></li>\r\n                \r\n                <li className=\"nav-item mb-2 \"><span onClick={handlelogout}>Logout</span></li>\r\n                </center>\r\n                \r\n            </ul>\r\n       </div>\r\n    )\r\n}\r\n \r\nexport default Sidebar","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\User\\Dashboardu.jsx",["157","158","159","160","161","162","163"],[],"C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\Driver\\Sidebard.jsx",["164","165"],[],"import React from 'react'\r\nimport admin from '../../admin.png'\r\nconst Sidebar = () => {\r\n    function handlelogout(){\r\n        window.localStorage.removeItem('token');\r\n        window.localStorage.removeItem('user');\r\n        window.location.href='/'\r\n    }\r\n    return (\r\n         <div className=\"col-md-3 col-lg-2 sidebar-offcanvas pl-0 side\" id=\"sidebar\" role=\"navigation\" style={{backgroundColor:\"#e9ecef\"}}>\r\n            <ul className=\"nav flex-column sticky-top pl-0 pt-5 p-3 mt-3 \">\r\n                <center>\r\n                <li><img src={admin} className=\"imagestyle\"/></li>\r\n                \r\n                <li className=\"nav-item mb-2 mt-3\"><a className=\"nav-link text-secondary\" href=\"#\"><h5><b>ADMIn</b></h5></a></li>\r\n                <li className=\"nav-item mb-2 \"><span onClick={handlelogout}>Logout</span></li>\r\n                </center>\r\n                \r\n            </ul>\r\n       </div>\r\n    )\r\n}\r\n \r\nexport default Sidebar","C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\Driver\\Navbard.jsx",["166"],[],"C:\\Users\\brahm\\OneDrive\\Desktop\\Training\\ecommerce\\frontend\\src\\components\\Driver\\Dashboardd.jsx",["167","168","169","170","171","172","173","174","175","176","177","178","179"],[],"\r\nimport React from 'react';\r\nimport { useState ,useEffect} from 'react'; \r\nimport {Container ,Card,Row, Col, Button} from 'react-bootstrap';   \r\n \r\nconst Dashboard = () => {\r\n   \r\n   const[allcourses,setallcourses] = useState([])\r\n   const[dummyregisters,setdummyregisters] = useState([])\r\n   const[dummycourseregisters,setdummycourseregisters] = useState([])\r\n \r\n   \r\n\r\n\r\n\r\n\r\n   \r\n   \r\n   var [s,sets]=React.useState(0)\r\n   function handleallcourse(){\r\n       sets(0)\r\n   }\r\n    function handleaddcourse(){\r\n       \r\n        sets(1)\r\n        \r\n        \r\n    }\r\n    function handleregisterapprove(){\r\n        \r\n        sets(2)\r\n        \r\n        \r\n    }\r\n    function handlecourseapprove(){\r\n        \r\n        sets(3)\r\n        \r\n    }\r\n    function handlefeeapprove(){\r\n        \r\n        sets(4)\r\n        \r\n    }\r\n    \r\n \r\n    return (\r\n    <div className=\"col main pt-5 mt-3\">\r\n         \r\n        <div className=\"row mb-3\">\r\n        <div className=\"col-xl-3 col-sm-6 py-2\" onClick={handleallcourse}>\r\n                <div className=\"card bg-success text-white h-100\">\r\n                    <div className=\"card-body bg-primary\" style={{backgroundColor:\"#57b960\"}}>\r\n                        \r\n                        <h6 className=\"text-uppercase\">All products</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-sm-6 py-2\" onClick={handleaddcourse}>\r\n                <div className=\"card bg-success text-white h-100\">\r\n                    <div className=\"card-body bg-success\" style={{backgroundColor:\"#57b960\"}}>\r\n                        \r\n                        <h6 classname=\"text-uppercase\">ADD product</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-sm-6 py-2\" onClick={handleregisterapprove}>\r\n                <div className=\"card text-white bg-danger h-100\">\r\n                    <div className=\"card-body bg-danger\">\r\n                        \r\n                        <h6 className=\"text-uppercase\" >ALL CATEGORIES</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-sm-6 py-2\" onClick={handlecourseapprove}>\r\n                <div className=\"card text-white bg-info h-100\">\r\n                    <div className=\"card-body bg-info\">\r\n                        \r\n                        <h6 className=\"text-uppercase\">ADD CATEGORY</h6>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-sm-6 py-2\" onClick={handlefeeapprove}>\r\n                <div className=\"card text-white bg-warning h-100\">\r\n                    <div className=\"card-body\">\r\n                        \r\n                        <h6 className=\"text-uppercase\">ALL DRIVERS</h6>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-sm-6 py-2\" onClick={handlecourseapprove}>\r\n                <div className=\"card text-white bg-info h-100\">\r\n                    <div className=\"card-body bg-info\">\r\n                        \r\n                        <h6 className=\"text-uppercase\">ADD DRIVER</h6>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-sm-6 py-2\" onClick={handlecourseapprove}>\r\n                <div className=\"card text-white bg-secondy h-100\">\r\n                    <div className=\"card-body bg-secondary\">\r\n                        \r\n                        <h6 className=\"text-uppercase\"> ALL ORDERS</h6>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-sm-6 py-2\" onClick={handlecourseapprove}>\r\n                <div className=\"card text-white bg-success h-100\">\r\n                    <div className=\"card-body bg-success\">\r\n                        \r\n                        <h6 className=\"text-uppercase\">ALL USERS</h6>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        \r\n \r\n    </div>\r\n    )\r\n}\r\n \r\nexport default Dashboard",{"ruleId":"180","severity":1,"message":"181","line":1,"column":25,"nodeType":"182","messageId":"183","endLine":1,"endColumn":29},{"ruleId":"180","severity":1,"message":"184","line":1,"column":45,"nodeType":"182","messageId":"183","endLine":1,"endColumn":53},{"ruleId":"180","severity":1,"message":"185","line":9,"column":10,"nodeType":"182","messageId":"183","endLine":9,"endColumn":19},{"ruleId":"180","severity":1,"message":"186","line":12,"column":9,"nodeType":"182","messageId":"183","endLine":12,"endColumn":19},{"ruleId":"180","severity":1,"message":"187","line":13,"column":9,"nodeType":"182","messageId":"183","endLine":13,"endColumn":14},{"ruleId":"188","severity":1,"message":"189","line":18,"column":21,"nodeType":"190","messageId":"191","endLine":18,"endColumn":23},{"ruleId":"192","severity":1,"message":"193","line":29,"column":7,"nodeType":"194","endLine":29,"endColumn":9,"suggestions":"195"},{"ruleId":"180","severity":1,"message":"185","line":3,"column":22,"nodeType":"182","messageId":"183","endLine":3,"endColumn":31},{"ruleId":"180","severity":1,"message":"196","line":9,"column":22,"nodeType":"182","messageId":"183","endLine":9,"endColumn":33},{"ruleId":"197","severity":1,"message":"198","line":53,"column":25,"nodeType":"199","endLine":53,"endColumn":69},{"ruleId":"180","severity":1,"message":"196","line":2,"column":10,"nodeType":"182","messageId":"183","endLine":2,"endColumn":21},{"ruleId":"200","severity":1,"message":"201","line":113,"column":36,"nodeType":"202","messageId":"203","endLine":116,"endColumn":16},{"ruleId":"200","severity":1,"message":"201","line":126,"column":22,"nodeType":"202","messageId":"203","endLine":128,"endColumn":4},{"ruleId":"180","severity":1,"message":"204","line":2,"column":34,"nodeType":"182","messageId":"183","endLine":2,"endColumn":40},{"ruleId":"180","severity":1,"message":"205","line":3,"column":30,"nodeType":"182","messageId":"183","endLine":3,"endColumn":33},{"ruleId":"180","severity":1,"message":"206","line":9,"column":19,"nodeType":"182","messageId":"183","endLine":9,"endColumn":31},{"ruleId":"188","severity":1,"message":"189","line":23,"column":21,"nodeType":"190","messageId":"191","endLine":23,"endColumn":23},{"ruleId":"197","severity":1,"message":"198","line":294,"column":17,"nodeType":"199","endLine":294,"endColumn":63},{"ruleId":"207","severity":1,"message":"208","line":366,"column":68,"nodeType":"209","messageId":"210","endLine":366,"endColumn":70},{"ruleId":"197","severity":1,"message":"198","line":378,"column":17,"nodeType":"199","endLine":378,"endColumn":63},{"ruleId":"197","severity":1,"message":"198","line":436,"column":17,"nodeType":"199","endLine":436,"endColumn":61},{"ruleId":"197","severity":1,"message":"198","line":504,"column":17,"nodeType":"199","endLine":504,"endColumn":61},{"ruleId":"180","severity":1,"message":"211","line":4,"column":10,"nodeType":"182","messageId":"183","endLine":4,"endColumn":20},{"ruleId":"180","severity":1,"message":"186","line":7,"column":11,"nodeType":"182","messageId":"183","endLine":7,"endColumn":21},{"ruleId":"212","severity":1,"message":"213","line":19,"column":52,"nodeType":"199","endLine":19,"endColumn":100},{"ruleId":"197","severity":1,"message":"198","line":20,"column":21,"nodeType":"199","endLine":20,"endColumn":62},{"ruleId":"212","severity":1,"message":"213","line":21,"column":52,"nodeType":"199","endLine":21,"endColumn":96},{"ruleId":"212","severity":1,"message":"214","line":20,"column":29,"nodeType":"199","endLine":20,"endColumn":70},{"ruleId":"212","severity":1,"message":"214","line":22,"column":29,"nodeType":"199","endLine":22,"endColumn":70},{"ruleId":"180","severity":1,"message":"186","line":5,"column":11,"nodeType":"182","messageId":"183","endLine":5,"endColumn":21},{"ruleId":"212","severity":1,"message":"213","line":15,"column":52,"nodeType":"199","endLine":15,"endColumn":96},{"ruleId":"197","severity":1,"message":"198","line":16,"column":21,"nodeType":"199","endLine":16,"endColumn":65},{"ruleId":"180","severity":1,"message":"205","line":5,"column":30,"nodeType":"182","messageId":"183","endLine":5,"endColumn":33},{"ruleId":"180","severity":1,"message":"215","line":7,"column":9,"nodeType":"182","messageId":"183","endLine":7,"endColumn":18},{"ruleId":"180","severity":1,"message":"216","line":14,"column":11,"nodeType":"182","messageId":"183","endLine":14,"endColumn":20},{"ruleId":"197","severity":1,"message":"198","line":152,"column":17,"nodeType":"199","endLine":152,"endColumn":63},{"ruleId":"207","severity":1,"message":"208","line":181,"column":68,"nodeType":"209","messageId":"210","endLine":181,"endColumn":70},{"ruleId":"197","severity":1,"message":"198","line":193,"column":17,"nodeType":"199","endLine":193,"endColumn":63},{"ruleId":"197","severity":1,"message":"198","line":219,"column":17,"nodeType":"199","endLine":219,"endColumn":63},{"ruleId":"197","severity":1,"message":"198","line":13,"column":21,"nodeType":"199","endLine":13,"endColumn":62},{"ruleId":"212","severity":1,"message":"213","line":15,"column":52,"nodeType":"199","endLine":15,"endColumn":100},{"ruleId":"212","severity":1,"message":"214","line":20,"column":29,"nodeType":"199","endLine":20,"endColumn":70},{"ruleId":"180","severity":1,"message":"185","line":3,"column":20,"nodeType":"182","messageId":"183","endLine":3,"endColumn":29},{"ruleId":"180","severity":1,"message":"217","line":4,"column":9,"nodeType":"182","messageId":"183","endLine":4,"endColumn":18},{"ruleId":"180","severity":1,"message":"218","line":4,"column":20,"nodeType":"182","messageId":"183","endLine":4,"endColumn":24},{"ruleId":"180","severity":1,"message":"219","line":4,"column":25,"nodeType":"182","messageId":"183","endLine":4,"endColumn":28},{"ruleId":"180","severity":1,"message":"205","line":4,"column":30,"nodeType":"182","messageId":"183","endLine":4,"endColumn":33},{"ruleId":"180","severity":1,"message":"220","line":4,"column":35,"nodeType":"182","messageId":"183","endLine":4,"endColumn":41},{"ruleId":"180","severity":1,"message":"221","line":8,"column":10,"nodeType":"182","messageId":"183","endLine":8,"endColumn":20},{"ruleId":"180","severity":1,"message":"222","line":8,"column":21,"nodeType":"182","messageId":"183","endLine":8,"endColumn":34},{"ruleId":"180","severity":1,"message":"223","line":9,"column":10,"nodeType":"182","messageId":"183","endLine":9,"endColumn":24},{"ruleId":"180","severity":1,"message":"224","line":9,"column":25,"nodeType":"182","messageId":"183","endLine":9,"endColumn":42},{"ruleId":"180","severity":1,"message":"225","line":10,"column":10,"nodeType":"182","messageId":"183","endLine":10,"endColumn":30},{"ruleId":"180","severity":1,"message":"226","line":10,"column":31,"nodeType":"182","messageId":"183","endLine":10,"endColumn":54},{"ruleId":"180","severity":1,"message":"227","line":19,"column":9,"nodeType":"182","messageId":"183","endLine":19,"endColumn":10},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'useEffect' is defined but never used.","'loggeduser' is assigned a value but never used.","'token' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["228"],"'useSelector' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useRef' is defined but never used.","'Col' is defined but never used.","'registeruser' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'loggeduser' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'useFormik' is defined but never used.","'allorders' is assigned a value but never used.","'Container' is defined but never used.","'Card' is defined but never used.","'Row' is defined but never used.","'Button' is defined but never used.","'allcourses' is assigned a value but never used.","'setallcourses' is assigned a value but never used.","'dummyregisters' is assigned a value but never used.","'setdummyregisters' is assigned a value but never used.","'dummycourseregisters' is assigned a value but never used.","'setdummycourseregisters' is assigned a value but never used.","'s' is assigned a value but never used.",{"desc":"229","fix":"230"},"Update the dependencies array to be: [dispatch]",{"range":"231","text":"232"},[775,777],"[dispatch]"]